name: postman-newman

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CAMINHO_PROJETO_WEBAPP: ./APIFinancas
  CAMINHO_TESTES: ./Tests
  IMAGE_DOCKERHUB: ${{ secrets.DOCKERHUB_USERNAME }}/apifinancas-dotnet7-gha
  
jobs:
  build-tests-push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3.3.0      
    - name: Build de imagem
      run: |
        cd ${{ env.CAMINHO_PROJETO_WEBAPP }}
        docker build . --file Dockerfile --tag ${{ env.IMAGE_DOCKERHUB }}:latest
    - name: Criação de container para testes com a API
      run: |
        docker run --name api-testes -p 5000:80 -d ${{ env.IMAGE_DOCKERHUB }}:latest
        docker container ls
    - name: Execução dos testes da API com Newman, além de geração de HTML Report + XML do JUnit
      if: always()
      run: |
        cd ${{ env.CAMINHO_TESTES }}
        echo "** Versão Global do Newman **"
        newman -v
        npm install newman-reporter-htmlextra@1.22.11
        npm install newman-reporter-junitfullreport@1.0.4
        npx newman run CalculoJurosCompostos.postman_collection.json -d data-tests.json -r cli,htmlextra,junitfullreport        
        echo "** Arquivos + diretórios gerados **"
        cd newman
        ls
    - name: Criar Test Summary
      uses: test-summary/action@v2.1
      env:
        CAMINHO_RESULTADO_TESTES: ${{ env.CAMINHO_TESTES }}/newman/*.xml
      if: always()
      with:
        paths: ${{ env.CAMINHO_RESULTADO_TESTES }}        
    - name: Upload como Artifact do Report + XML com resultado dos testes (Postman + Newman)
      uses: actions/upload-artifact@v3.1.2
      env:
        CAMINHO_RESULTADO_TESTES: ${{ env.CAMINHO_TESTES }}/newman/
      if: always()
      with:
        name: resultado-testes
        path: ${{ env.CAMINHO_RESULTADO_TESTES }}
        retention-days: 30
    - name: Login no Docker Hub
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Geração de tag com número do Build e Push no Docker Hub
      run: |
        docker tag ${{ env.IMAGE_DOCKERHUB }}:latest ${{ env.IMAGE_DOCKERHUB }}:$GITHUB_RUN_NUMBER
        docker push --all-tags ${{ env.IMAGE_DOCKERHUB }}